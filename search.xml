<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mongodb_编程.md</title>
    <url>/2024/07/07/@code/Mongodb-%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Mongodb编程操作"><a href="#Mongodb编程操作" class="headerlink" title="Mongodb编程操作"></a>Mongodb编程操作</h1><span id="more"></span>

<h2 id="连接数据库及操作："><a href="#连接数据库及操作：" class="headerlink" title="连接数据库及操作："></a>连接数据库及操作：</h2><h3 id="主方法"><a href="#主方法" class="headerlink" title="主方法"></a>主方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hniu.bigdata.mongodb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mongodb.ConnectionString;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.MongoClientSettings;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.*;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.model.CreateCollectionOptions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mongodb_main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        获取连接对象</span></span><br><span class="line">        <span class="type">Mongodb_main</span> <span class="variable">mongodb_main</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Mongodb_main</span>();</span><br><span class="line">        <span class="type">MongoClient</span> <span class="variable">client</span> <span class="operator">=</span> mongodb_main.initClient();</span><br><span class="line"></span><br><span class="line">        <span class="type">DataOperator</span> <span class="variable">dataOperator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataOperator</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//创建 namespace</span></span><br><span class="line">        <span class="type">MongoDatabase</span> <span class="variable">database</span> <span class="operator">=</span> client.getDatabase(<span class="string">&quot;bigdata2201&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//创建合集</span></span><br><span class="line">        <span class="type">MongoCollection</span> <span class="variable">collection</span> <span class="operator">=</span> database.getCollection(<span class="string">&quot;jyp15&quot;</span>);</span><br><span class="line">        </span><br><span class="line"><span class="comment">//        dataOperator.dataPut(collection);</span></span><br><span class="line"><span class="comment">//        dataOperator.getData(collection);</span></span><br><span class="line"><span class="comment">//        dataOperator.putManyData(collection);</span></span><br><span class="line"><span class="comment">//        dataOperator.insertByCommand(database);</span></span><br><span class="line"><span class="comment">//        dataOperator.deleteData(collection);</span></span><br><span class="line">        dataOperator.upDateByCommand(database);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//关闭数据库连接</span></span><br><span class="line">        client.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dataBaseOperator</span><span class="params">(MongoClient client)</span> &#123;</span><br><span class="line">        <span class="comment">//        创建数据库</span></span><br><span class="line">        <span class="type">MongoDatabase</span> <span class="variable">database</span> <span class="operator">=</span> client.getDatabase(<span class="string">&quot;bigdata2201&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//        创建集合/（表）</span></span><br><span class="line">        database.createCollection(<span class="string">&quot;jyp15&quot;</span>, <span class="keyword">new</span> <span class="title class_">CreateCollectionOptions</span>()</span><br><span class="line">                .capped(<span class="literal">true</span>)</span><br><span class="line">                .maxDocuments(<span class="number">10000</span>)</span><br><span class="line">                .sizeInBytes(<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">512</span>));</span><br><span class="line">        <span class="comment">//        列出集合</span></span><br><span class="line">        MongoIterable&lt;String&gt; names = database.listCollectionNames();</span><br><span class="line">        <span class="keyword">for</span> (String name : names) &#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    连接Mongodb（数据库）</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> MongoClient <span class="title function_">initClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ConnectionString</span> <span class="variable">connectionString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ConnectionString</span>(<span class="string">&quot;mongodb://192.168.15.15:27017&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">MongoClientSettings</span> <span class="variable">settings</span> <span class="operator">=</span> MongoClientSettings.builder()</span><br><span class="line">                .applyConnectionString(connectionString)</span><br><span class="line">                .applicationName(<span class="string">&quot;JiangYuPing&quot;</span>)</span><br><span class="line">                .applyToConnectionPoolSettings(builder -&gt; &#123;</span><br><span class="line">                    builder.maxSize(<span class="number">10</span>).minSize(<span class="number">5</span>).maxWaitTime(<span class="number">1000</span>, TimeUnit.MILLISECONDS);</span><br><span class="line">                &#125;)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">MongoClient</span> <span class="variable">client</span> <span class="operator">=</span> MongoClients.create(settings);</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="数据操作方法类："><a href="#数据操作方法类：" class="headerlink" title="数据操作方法类："></a>数据操作方法类：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hniu.bigdata.mongodb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.hniu.bigdata.hbase.CreateData;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.MongoCollection;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.MongoDatabase;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.MongoIterable;</span><br><span class="line"><span class="keyword">import</span> org.bson.Document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataOperator</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    数据插入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dataPut</span><span class="params">(MongoCollection collection)</span> &#123;</span><br><span class="line">        <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;JiangYuPing&quot;</span>);</span><br><span class="line">        doc.append(<span class="string">&quot;sex&quot;</span>, <span class="string">&quot;male&quot;</span>)</span><br><span class="line">                .append(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>)</span><br><span class="line">                .append(<span class="string">&quot;major&quot;</span>, <span class="string">&quot;bigdata&quot;</span>);</span><br><span class="line">        collection.insertOne(doc);</span><br><span class="line">        System.out.println(<span class="string">&quot;数据插入成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    数据查询</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getData</span><span class="params">(MongoCollection collection)</span> &#123;</span><br><span class="line">        MongoIterable&lt;Document&gt; document = collection.find().limit(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">for</span> (Document doc : document) &#123;</span><br><span class="line">            System.out.println(doc.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    批量插入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">putManyData</span><span class="params">(MongoCollection collection)</span> &#123;</span><br><span class="line">        List&lt;Document&gt; documentList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">CreateData</span> <span class="variable">createData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CreateData</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>; index &lt; <span class="number">10000</span>; index++) &#123;</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">data</span> <span class="operator">=</span> createData.createData(<span class="number">240625</span>, <span class="number">11</span>);</span><br><span class="line">            <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> Document.parse(data.toString());</span><br><span class="line">            documentList.add(document);</span><br><span class="line">        &#125;</span><br><span class="line">        collection.insertMany(documentList);</span><br><span class="line">        System.out.println(<span class="string">&quot;批量数据插入成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    command 插入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertByCommand</span><span class="params">(MongoDatabase database)</span> &#123;</span><br><span class="line">        <span class="comment">//spark集合，不存在则创建</span></span><br><span class="line">        <span class="type">Document</span> <span class="variable">insertDB</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;insert&quot;</span>, <span class="string">&quot;spark&quot;</span>);</span><br><span class="line">        insertDB.append(<span class="string">&quot;documents&quot;</span>, Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;denny&quot;</span>).append(<span class="string">&quot;sex&quot;</span>, <span class="string">&quot;male&quot;</span>).append(<span class="string">&quot;major&quot;</span>, <span class="string">&quot;computer&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;jimmy&quot;</span>).append(<span class="string">&quot;sex&quot;</span>, <span class="string">&quot;male&quot;</span>).append(<span class="string">&quot;major&quot;</span>, <span class="string">&quot;computer&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;ALice&quot;</span>).append(<span class="string">&quot;sex&quot;</span>, <span class="string">&quot;female&quot;</span>).append(<span class="string">&quot;major&quot;</span>, <span class="string">&quot;computer&quot;</span>)</span><br><span class="line">        ));</span><br><span class="line">        insertDB.append(<span class="string">&quot;ordered&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        database.runCommand(insertDB);</span><br><span class="line">        System.out.println(<span class="string">&quot;command 插入成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    删除数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteData</span><span class="params">(MongoCollection collection)</span> &#123;</span><br><span class="line">        <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>();</span><br><span class="line">        document.append(<span class="string">&quot;car_color&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line"></span><br><span class="line">        collection.deleteMany(document);</span><br><span class="line">        System.out.println(<span class="string">&quot;数据删除成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    更新数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">upDateByCommand</span><span class="params">(MongoDatabase database)</span> &#123;</span><br><span class="line">        <span class="type">Document</span> <span class="variable">updateDoc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;update&quot;</span>, <span class="string">&quot;jyp15&quot;</span>);</span><br><span class="line">        updateDoc.append(<span class="string">&quot;updates&quot;</span>, Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;q&quot;</span>, <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;car_color&quot;</span>, <span class="string">&quot;black&quot;</span>))</span><br><span class="line">                        .append(<span class="string">&quot;u&quot;</span>, <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;$set&quot;</span>, <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;video_name&quot;</span>, <span class="string">&quot;JiangYuPing&quot;</span>)))</span><br><span class="line">                        .append(<span class="string">&quot;multi&quot;</span>, <span class="literal">true</span>)</span><br><span class="line">                        .append(<span class="string">&quot;upsert&quot;</span>, <span class="literal">true</span>)</span><br><span class="line">        )).append(<span class="string">&quot;ordered&quot;</span>, <span class="literal">true</span>).append(<span class="string">&quot;maxTimeMS&quot;</span>, <span class="number">10000</span>);</span><br><span class="line">        <span class="type">Document</span> <span class="variable">result</span> <span class="operator">=</span> database.runCommand(updateDoc);</span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Code</category>
      </categories>
  </entry>
  <entry>
    <title>Mongodb 安装配置</title>
    <url>/2024/07/01/Course-Related%20Configuration/Mongodb_%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="Mongodb-安装"><a href="#Mongodb-安装" class="headerlink" title="Mongodb 安装"></a>Mongodb 安装</h1><span id="more"></span>



<h2 id="解压tar包"><a href="#解压tar包" class="headerlink" title="解压tar包"></a>解压tar包</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf mongodb-linux-x86_64-rhel70-7.0.11.tgz</span><br></pre></td></tr></table></figure>

<h2 id="创建用户组"><a href="#创建用户组" class="headerlink" title="创建用户组"></a>创建用户组</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">useradd mongod</span><br></pre></td></tr></table></figure>

<h2 id="给文件赋权限"><a href="#给文件赋权限" class="headerlink" title="给文件赋权限"></a>给文件赋权限</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chown -R mongod:mongod /home/bigdata/mongodb/</span><br></pre></td></tr></table></figure>

<h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>

<h2 id="启动Mongodb"><a href="#启动Mongodb" class="headerlink" title="启动Mongodb"></a>启动Mongodb</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/mongod --config mongod.conf </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Course-Related Configuration</category>
      </categories>
  </entry>
  <entry>
    <title>hadoop on yran 模式</title>
    <url>/2024/07/01/Course-Related%20Configuration/hadoop%20on%20yran%20%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="hadoop-on-yran-模式"><a href="#hadoop-on-yran-模式" class="headerlink" title="hadoop on yran 模式"></a><strong>hadoop on yran 模式</strong></h1><h2 id="Spark安装部署：On-Yarn模式"><a href="#Spark安装部署：On-Yarn模式" class="headerlink" title="Spark安装部署：On Yarn模式"></a>Spark安装部署：On Yarn模式</h2><span id="more"></span>

<h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a><strong>实验步骤</strong></h2><h3 id="打开命令行终端，切换到spark压缩包所在目录"><a href="#打开命令行终端，切换到spark压缩包所在目录" class="headerlink" title="打开命令行终端，切换到spark压缩包所在目录"></a>打开命令行终端，切换到spark压缩包所在目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/zkpk/tgz/spark/</span><br></pre></td></tr></table></figure>

<h3 id="解压压缩包到用户根目录"><a href="#解压压缩包到用户根目录" class="headerlink" title="解压压缩包到用户根目录"></a>解压压缩包到用户根目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf spark-2.1.1-bin-hadoop2.7.tgz -C /home/zkpk/</span><br></pre></td></tr></table></figure>

<h3 id="进入解压出的spark目录，运行ll即可看到此目录下的内容"><a href="#进入解压出的spark目录，运行ll即可看到此目录下的内容" class="headerlink" title="进入解压出的spark目录，运行ll即可看到此目录下的内容"></a>进入解压出的spark目录，运行ll即可看到此目录下的内容</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd spark-2.1.1-bin-hadoop2.7/</span><br></pre></td></tr></table></figure>

<h4 id="返回到根目录，编辑-bash-profile文件，添加如下三个环境变量，保存退出。"><a href="#返回到根目录，编辑-bash-profile文件，添加如下三个环境变量，保存退出。" class="headerlink" title="返回到根目录，编辑 .bash_profile文件，添加如下三个环境变量，保存退出。"></a>返回到根目录，编辑 .bash_profile文件，添加如下三个环境变量，保存退出。</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim .bash_profile</span><br><span class="line"></span><br><span class="line">export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class="line">export HDFS_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class="line">export YARN_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/../../images/image-20240701144752494.png" alt="image-20240701144752494"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source  .bash_profile #重新加载配置文件，使添加的变量生效</span><br></pre></td></tr></table></figure>

<h4 id="有时候我们在启动Spark-on-Yarn时会出现内存大小错误，此时job会被强制杀死，为了避免这一情况，我们编辑-home-zkpk-hadoop-2-7-3-etc-hadoop目录下的yarn-site-xml文件"><a href="#有时候我们在启动Spark-on-Yarn时会出现内存大小错误，此时job会被强制杀死，为了避免这一情况，我们编辑-home-zkpk-hadoop-2-7-3-etc-hadoop目录下的yarn-site-xml文件" class="headerlink" title="有时候我们在启动Spark on Yarn时会出现内存大小错误，此时job会被强制杀死，为了避免这一情况，我们编辑&#x2F;home&#x2F;zkpk&#x2F;hadoop-2.7.3&#x2F;etc&#x2F;hadoop目录下的yarn-site.xml文件"></a>有时候我们在启动Spark on Yarn时会出现内存大小错误，此时job会被强制杀死，为了避免这一情况，我们编辑&#x2F;home&#x2F;zkpk&#x2F;hadoop-2.7.3&#x2F;etc&#x2F;hadoop目录下的yarn-site.xml文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">d hadoop-2.7.3/etc/hadoop/</span><br><span class="line"></span><br><span class="line">vim yarn.site.xml #添加以下内容</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.pmem-check-enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/../../images/image-20240701151827996.png" alt="image-20240701151827996"></p>
<h4 id="将yarn-site-xml文件发送到从节点"><a href="#将yarn-site-xml文件发送到从节点" class="headerlink" title="将yarn-site.xml文件发送到从节点"></a>将yarn-site.xml文件发送到从节点</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp yarn-site.xml zkpk@slave01:/home/zkpk/hadoop-2.7.3/etc/hadoop</span><br><span class="line"></span><br><span class="line"> scp yarn-site.xml zkpk@slave02:/home/zkpk/hadoop-2.7.3/etc/hadoop</span><br></pre></td></tr></table></figure>

<p><img src="/../../images/image-20240701152019498.png" alt="image-20240701152019498"></p>
<h3 id="启动Hadoop集群"><a href="#启动Hadoop集群" class="headerlink" title="启动Hadoop集群"></a>启动Hadoop集群</h3><h4 id="在master启动Hadoop集群"><a href="#在master启动Hadoop集群" class="headerlink" title="在master启动Hadoop集群"></a>在master启动Hadoop集群</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">格式化</span></span><br><span class="line">hadoop namenode -format</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动集群</span></span><br><span class="line">start-all.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭安全模式</span></span><br><span class="line">hdfs dfsadmin -safemode  leave</span><br></pre></td></tr></table></figure>

<h3 id="验证Spark-on-Yarn安装部署是否生效"><a href="#验证Spark-on-Yarn安装部署是否生效" class="headerlink" title="验证Spark on Yarn安装部署是否生效"></a>验证Spark on Yarn安装部署是否生效</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd spark-2.1.1-bin-hadoop2.7/</span><br><span class="line"></span><br><span class="line">./bin/spark-submit --class org.apache.spark.examples.SparkPi --master yarn --num-executors 3 --driver-memory 1g --executor-memory 1g --executor-cores 1 examples/jars/spark-examples_2.11-2.1.1.jar 10</span><br></pre></td></tr></table></figure>

<p><img src="/../../images/image-20240701152546256.png" alt="image-20240701152546256"></p>
<h3 id="访问WebUI"><a href="#访问WebUI" class="headerlink" title="访问WebUI"></a>访问WebUI</h3><p><img src="/../../images/image-20240701152608181.png" alt="image-20240701152608181"></p>
]]></content>
      <categories>
        <category>Course-Related Configuration</category>
      </categories>
  </entry>
  <entry>
    <title>spark_streaming编程.md</title>
    <url>/2024/07/08/@code/spark-streaming%E7%BC%96%E7%A8%8B-md/</url>
    <content><![CDATA[<h1 id="spark-编程"><a href="#spark-编程" class="headerlink" title="spark_编程"></a>spark_编程</h1><span id="more"></span>

<h2 id="hdfs-streaming"><a href="#hdfs-streaming" class="headerlink" title="hdfs_streaming"></a>hdfs_streaming</h2><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scala.org.<span class="type">Learn</span>.<span class="type">SparkStream</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.&#123;<span class="type">Seconds</span>, <span class="type">StreamingContext</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">hdfs_streaming</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;hdfs_streaming&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> ssc = <span class="keyword">new</span> <span class="type">StreamingContext</span>(conf, <span class="type">Seconds</span>(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> filePath = args(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> fileStream = ssc.textFileStream(filePath)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> words = fileStream.flatMap(_.split(<span class="string">&quot; &quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> wordPairs = words.map((_, <span class="number">1</span>)).reduceByKey(_ + _)</span><br><span class="line"></span><br><span class="line">    wordPairs.print()</span><br><span class="line">    ssc.start()</span><br><span class="line">    ssc.awaitTermination()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="TCP-streaming"><a href="#TCP-streaming" class="headerlink" title="TCP_streaming"></a>TCP_streaming</h2><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scala.org.<span class="type">Learn</span>.<span class="type">SparkStream</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.streaming.&#123;<span class="type">Seconds</span>, <span class="type">StreamingContext</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Tcp__streaming</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;Tcp_streaming&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> ssc = <span class="keyword">new</span> <span class="type">StreamingContext</span>(conf, <span class="type">Seconds</span>(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> textStram = ssc.socketTextStream(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9999</span>)</span><br><span class="line">    <span class="keyword">val</span> words = textStram.flatMap(_.split(<span class="string">&quot; &quot;</span>))</span><br><span class="line">    <span class="keyword">val</span> wordPair = words.map((_,<span class="number">1</span>)).reduceByKey(_ + _)</span><br><span class="line">    wordPair.print()</span><br><span class="line">    ssc.start()</span><br><span class="line">    ssc.awaitTermination()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>code</category>
      </categories>
  </entry>
</search>
